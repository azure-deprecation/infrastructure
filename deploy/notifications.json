{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ApplicationInsights.Name": {
            "type": "String"
        },
        "Connections.CosmosDb.Name": {
            "type": "String"
        },
        "Connections.Gmail.Name": {
            "type": "String"
        },
        "Connections.MailChimp.Name": {
            "type": "String"
        },
        "Connections.ServiceBus.Name": {
            "type": "String"
        },
        "Connections.Twitter.Name": {
            "type": "String"
        },
        "CosmosDb.Account.Name": {
            "type": "String"
        },
        "Function.App.Name": {
            "type": "String"
        },
        "Function.Plan.Name": {
            "type": "String"
        },
        "EventGrid.Topic.Name": {
            "type": "String"
        },
        "Gmail.Auth.ClientId": {
            "type": "String"
        },
        "Gmail.Auth.ClientSecret": {
            "type": "SecureString"
        },
        "MailChimp.Auth.BearerToken": {
            "type": "SecureString"
        },
        "MailChimp.MailingList.Id": {
            "type": "String"
        },
        "MailChimp.Template.Id": {
            "type": "int"
        },
        "ServiceBus.Namespace.Name": {
            "type": "String"
        },
        "StorageAccount.Name": {
            "type": "String"
        },
        "Workflow.MonthlySummaryNewsletter.Name": {
            "type": "String"
        },
        "Workflow.TweetNewDeprecation.Name": {
            "type": "String"
        }
    },
    "variables": {
        "Connections.CosmosDb.Id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/documentdb')]",
        "Connections.Gmail.Id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/gmail')]",
        "Connections.MailChimp.Id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/mailchimp')]",
        "Connections.ServiceBus.Id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/servicebus')]",
        "Connections.Twitter.Id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/twitter')]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-01-15",
            "name": "[parameters('Function.Plan.Name')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1"
            },
            "kind": "functionapp",
            "properties": {
                "reserved": true
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2021-01-15",
            "name": "[parameters('Function.App.Name')]",
            "location": "[resourceGroup().location]",
            "kind": "functionapp,linux",
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('Function.Plan.Name'))]",
                "reserved": true,
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(resourceId('microsoft.insights/components/', parameters('ApplicationInsights.Name')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('StorageAccount.Name'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('StorageAccount.Name')), '2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~3"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "dotnet"
                        },
                        {
                            "name": "EVENTGRID_AUTH_KEY",
                            "value": "[listKeys(resourceId('Microsoft.EventGrid/topics', parameters('EventGrid.Topic.Name')), '2020-06-01').key1]"
                        },
                        {
                            "name": "EVENTGRID_ENDPOINT",
                            "value": "[concat('https://', parameters('EventGrid.Topic.Name'), '.', resourceGroup().location, '-1.eventgrid.azure.net/api/events')]"
                        },
                        {
                            "name": "ServiceBus_ConnectionString",
                            "value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('ServiceBus.Namespace.Name'), 'RootManageSharedAccessKey'), '2017-04-01').primaryConnectionString]"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('Function.Plan.Name'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('Connections.ServiceBus.Name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('Connections.ServiceBus.Name')]",
                "customParameterValues": {},
                "api": {
                    "id": "[variables('Connections.ServiceBus.Id')]"
                },
                "parameterValues": {
                    "connectionString": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('ServiceBus.Namespace.Name'), 'RootManageSharedAccessKey'), '2017-04-01').primaryConnectionString]"
                }
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('Connections.Twitter.Name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('Connections.Twitter.Name')]",
                "customParameterValues": {},
                "api": {
                    "id": "[variables('Connections.Twitter.Id')]"
                },
                "parameterValues": {}
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('Workflow.TweetNewDeprecation.Name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_message_is_received_in_a_topic_subscription_(auto-complete)": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 15
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['servicebus']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/@{encodeURIComponent(encodeURIComponent('new-deprecation-notices'))}/subscriptions/@{encodeURIComponent('new-notice-tweet')}/messages/head",
                                "queries": {
                                    "subscriptionType": "Main"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Parse_JSON": {
                            "runAfter": {},
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@{decodeBase64(triggerBody()?['ContentData'])}",
                                "schema": {
                                    "DeprecationInfo": {
                                        "AdditionalInformation": "https://docs.microsoft.com/en-us/azure/cognitive-services/translator/migrate-to-v3",
                                        "Contact": {
                                            "Type": 3
                                        },
                                        "DueOn": "2025-03-31T00:00:00+00:00",
                                        "Impact": {
                                            "Area": "Feature",
                                            "Cloud": "Public",
                                            "Description": "Service will no longer be available.",
                                            "Services": [
                                                "CognitiveServices"
                                            ],
                                            "Type": "MigrationRequired"
                                        },
                                        "Notice": {
                                            "AdditionalInfo": null,
                                            "Links": [
                                                "https://azure.microsoft.com/en-gb/updates/version-2-of-translator-is-retiring-on-24-may-2021/",
                                                "https://docs.microsoft.com/en-us/azure/cognitive-services/translator/migrate-to-v3"
                                            ],
                                            "OfficialReport": "> In May 2018, we announced the general availability of version 3 of Translator and will retire version 2 of Translator on 24 May 2021.\r\n> \r\n> Key benefits of version 3 of Translator include: \r\n> - More functionalities including bilingual dictionary, transliterate and translate to multiple target languages in a single request.\r\n> - Provides a  [layered security model](https://docs.microsoft.com/en-us/azure/cognitive-services/Welcome#securing-resources) as part of Azure Cognitive Services.\r\n> - Customized translations through [Custom Translator](https://portal.customtranslator.azure.ai/)."
                                        },
                                        "RequiredAction": {
                                            "AdditionalInfo": null,
                                            "OfficialReport": "> - If you are using version 2 of Translator, please [migrate your applications to version 3](https://docs.microsoft.com/en-us/azure/cognitive-services/translator/migrate-to-v3) before 24 May 2021 to avoid service disruption.\r\n> - Your current Translator subscription and key will work with version 3, there is no need to create a new Translator subscription in the Azure portal."
                                        },
                                        "Title": "Azure Cognitive Services Translator v2 is deprecated by 24 May 2021."
                                    },
                                    "PublishedNotice": {
                                        "ApiInfo": {
                                            "Id": 704370266,
                                            "Url": "https://api.github.com/repos/azure-deprecation-automation/sandbox/issues/73"
                                        },
                                        "ClosedAt": null,
                                        "CreatedAt": "2020-09-18T13:16:36+00:00",
                                        "DashboardInfo": {
                                            "Id": 73,
                                            "Url": "https://github.com/azure-deprecation-automation/sandbox/issues/73"
                                        },
                                        "Labels": [
                                            "area:certification",
                                            "impact:migration-required",
                                            "services:cognitive-services",
                                            "verified"
                                        ],
                                        "Title": "Azure Cognitive Services Translator v2 is deprecated by 24 May 2021.",
                                        "UpdatedAt": "2020-09-18T13:16:37+00:00"
                                    }
                                }
                            }
                        },
                        "Post_a_tweet": {
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['twitter']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/posttweet",
                                "queries": {
                                    "tweetText": "📢 @{body('Parse_JSON')['DeprecationInfo']?['Title']}\n\n@{body('Parse_JSON')['PublishedNotice']?['DashboardInfo']?['Url']}\n\n#azure #deprecation"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "servicebus": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('Connections.ServiceBus.Name'))]",
                                "connectionName": "[parameters('Connections.ServiceBus.Name')]",
                                "id": "[variables('Connections.ServiceBus.Id')]"
                            },
                            "twitter": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('Connections.Twitter.Name'))]",
                                "connectionName": "[parameters('Connections.Twitter.Name')]",
                                "id": "[variables('Connections.Twitter.Id')]"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('Connections.ServiceBus.Name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('Connections.Twitter.Name'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('Connections.CosmosDb.Name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('Connections.CosmosDb.Name')]",
                "customParameterValues": {},
                "api": {
                    "id": "[variables('Connections.CosmosDb.Id')]"
                },
                "parameterValues": {
                    "databaseAccount": "[parameters('CosmosDb.Account.Name')]",
                    "accessKey": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('CosmosDb.Account.Name')), '2015-04-08').primaryMasterKey]"
                }
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[parameters('Connections.MailChimp.Name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "displayName": "[parameters('Connections.MailChimp.Name')]",
                "customParameterValues": {},
                "api": {
                    "id": "[variables('Connections.MailChimp.Id')]"
                },
                "parameterValues": {
                }
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('Workflow.MonthlySummaryNewsletter.Name')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "MailChimp.BearerToken": {
                            "defaultValue": "[parameters('MailChimp.Auth.BearerToken')]",
                            "type": "SecureString"
                        },
                        "MailChimp.MailingList.Id": {
                            "defaultValue": "[parameters('MailChimp.MailingList.Id')]",
                            "type": "String"
                        },
                        "MailChimp.Template.Id": {
                            "defaultValue": "[parameters('MailChimp.Template.Id')]",
                            "type": "Int"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "Month",
                                "interval": 1,
                                "startTime": "2021-11-01T02:00:00Z",
                                "timeZone": "Romance Standard Time"
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Month",
                                "interval": 1,
                                "startTime": "2021-11-01T02:00:00Z",
                                "timeZone": "Romance Standard Time"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Close_HTML_List_(New)": {
                            "runAfter": {
                                "For_Each_New_Deprecation": [
                                    "Succeeded"
                                ]
                            },
                            "type": "AppendToStringVariable",
                            "inputs": {
                                "name": "NewDeprecationsHtml",
                                "value": "</ul>"
                            }
                        },
                        "Close_HTML_List_(Upcoming)": {
                            "runAfter": {
                                "For_Each_Upcoming_Deprecation": [
                                    "Succeeded"
                                ]
                            },
                            "type": "AppendToStringVariable",
                            "inputs": {
                                "name": "UpcomingDeprecationsHtml",
                                "value": "</ul>"
                            }
                        },
                        "Compose_Email_Campaign_Name": {
                            "runAfter": {
                                "Close_HTML_List_(New)": [
                                    "Succeeded"
                                ],
                                "Close_HTML_List_(Upcoming)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose",
                            "inputs": "Azure Deprecation Notices - Monthly Summary (@{formatDateTime(variables('PastPeriod'), 'MMMM yyyy')})"
                        },
                        "Create_New_Campaign": {
                            "runAfter": {
                                "Compose_Email_Campaign_Name": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "recipients": {
                                        "list_id": "@parameters('MailChimp.MailingList.Id')"
                                    },
                                    "settings": {
                                        "from_name": "Azure Deprecation Notices",
                                        "reply_to": "no-reply@azure-deprecation-notices.cloud",
                                        "subject_line": "@{outputs('Compose_Email_Campaign_Name')}",
                                        "title": "@{outputs('Compose_Email_Campaign_Name')}"
                                    },
                                    "type": "regular"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['mailchimp']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/campaigns"
                            }
                        },
                        "For_Each_New_Deprecation": {
                            "foreach": "@body('Get_New_Deprecations_From_Last_Month')?['value']",
                            "actions": {
                                "Append_New_Deprecation_To_List": {
                                    "runAfter": {},
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "NewDeprecationsHtml",
                                        "value": "<li>@{items('For_Each_New_Deprecation')['Title']} (<a href=\"@{items('For_Each_New_Deprecation')['Url']}\">link</a>)</li>"
                                    }
                                }
                            },
                            "runAfter": {
                                "Get_New_Deprecations_From_Last_Month": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_Each_Upcoming_Deprecation": {
                            "foreach": "@body('Get_First_10_Upcoming_Deprecations')?['value']",
                            "actions": {
                                "Append_Upcoming_Deprecation_To_List": {
                                    "runAfter": {},
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "UpcomingDeprecationsHtml",
                                        "value": "<li>@{items('For_Each_Upcoming_Deprecation')['Title']} (<a href=\"@{items('For_Each_Upcoming_Deprecation')['Url']}\">link</a>)</li>"
                                    }
                                }
                            },
                            "runAfter": {
                                "Get_First_10_Upcoming_Deprecations": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_First_10_Upcoming_Deprecations": {
                            "runAfter": {
                                "Initialize_Upcoming_Deprecations_HTML": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v5/cosmosdb/@{encodeURIComponent('AccountNameFromSettings')}/dbs/@{encodeURIComponent('deprecation-db')}/colls/@{encodeURIComponent('deprecations')}/query",
                                "queries": {
                                    "queryText": "SELECT c.DeprecationInfo.Title, c.PublishedNotice.DashboardInfo.Url FROM c ORDER BY c.DeprecationInfo.Timeline ASC"
                                }
                            }
                        },
                        "Get_New_Deprecations_From_Last_Month": {
                            "runAfter": {
                                "Initialize_Upcoming_Deprecations_HTML": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['documentdb']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/v5/cosmosdb/@{encodeURIComponent('AccountNameFromSettings')}/dbs/@{encodeURIComponent('deprecation-db')}/colls/@{encodeURIComponent('deprecations')}/query",
                                "queries": {
                                    "queryText": "SELECT c.DeprecationInfo.Title, c.PublishedNotice.DashboardInfo.Url FROM c WHERE c.PublishedNotice.CreatedAt >= '@{formatDateTime(variables('PastPeriod'), 'yyyy-MM')}-01T00:00:01+00:00' AND c.PublishedNotice.CreatedAt < '@{formatDateTime(utcNow(), 'yyyy-MM')}-01T00:00:01+00:00' ORDER BY c.DeprecationInfo.Timeline ASC"
                                }
                            }
                        },
                        "Initialize_New_Deprecations_HTML": {
                            "runAfter": {
                                "Initialize_Past_Period_Variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "NewDeprecationsHtml",
                                        "type": "string",
                                        "value": "<ul>"
                                    }
                                ]
                            }
                        },
                        "Initialize_Past_Period_Variable": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "PastPeriod",
                                        "type": "string",
                                        "value": "@{subtractFromTime(utcNow(), 1, 'Month')}"
                                    }
                                ]
                            }
                        },
                        "Initialize_Upcoming_Deprecations_HTML": {
                            "runAfter": {
                                "Initialize_New_Deprecations_HTML": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "UpcomingDeprecationsHtml",
                                        "type": "string",
                                        "value": "<ul>"
                                    }
                                ]
                            }
                        },
                        "Set_Campaign_Content": {
                            "runAfter": {
                                "Create_New_Campaign": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": {
                                    "template": {
                                        "id": "@parameters('MailChimp.Template.Id')",
                                        "sections": {}
                                    }
                                },
                                "headers": {
                                    "Authorization": "Basic @{parameters('MailChimp.BearerToken')}"
                                },
                                "method": "PUT",
                                "uri": "https://us2.api.mailchimp.com/3.0/campaigns/@{body('Create_New_Campaign')?['id']}/content"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "documentdb": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('Connections.CosmosDb.Name'))]",
                                "connectionName": "[parameters('Connections.CosmosDb.Name')]",
                                "id": "[variables('Connections.CosmosDb.Id')]"
                            },
                            "mailchimp": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('Connections.MailChimp.Name'))]",
                                "connectionName": "[parameters('Connections.MailChimp.Name')]",
                                "id": "[variables('Connections.MailChimp.Id')]"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('Connections.CosmosDb.Name'))]",
                "[resourceId('Microsoft.Web/connections', parameters('Connections.MailChimp.Name'))]"
            ]
        }
    ]
}