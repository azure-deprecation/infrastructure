{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.10.61.36676",
      "templateHash": "4263508844426972376"
    }
  },
  "parameters": {
    "applicationInsightsName": {
      "type": "string"
    },
    "cosmosDbConnectionName": {
      "type": "string"
    },
    "serviceBusConnectionName": {
      "type": "string"
    },
    "cosmosDbAccountName": {
      "type": "string"
    },
    "functionAppName": {
      "type": "string"
    },
    "functionPlanName": {
      "type": "string"
    },
    "githubOwner": {
      "type": "string"
    },
    "githubRepoName": {
      "type": "string"
    },
    "githubPersonalAccessToken": {
      "type": "secureString"
    },
    "serviceBusNamespaceName": {
      "type": "string"
    },
    "storageAccountName": {
      "type": "string"
    },
    "persistDeprecationWorkflowName": {
      "type": "string"
    },
    "defaultLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    }
  },
  "variables": {
    "cosmosDbConnectionId": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('defaultLocation'), 'documentdb')]",
    "serviceBusConnectionId": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('defaultLocation'), 'servicebus')]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2021-01-15",
      "name": "[parameters('functionPlanName')]",
      "location": "[parameters('defaultLocation')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic",
        "size": "Y1"
      },
      "kind": "functionapp",
      "properties": {
        "reserved": true
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-01-15",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('defaultLocation')]",
      "kind": "functionapp,linux",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('functionPlanName'))]",
        "reserved": true,
        "siteConfig": {
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components/', parameters('applicationInsightsName')), '2015-05-01').InstrumentationKey]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('storageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "dotnet"
            },
            {
              "name": "githubOwner",
              "value": "[parameters('githubOwner')]"
            },
            {
              "name": "GitHub_RepoName",
              "value": "[parameters('githubRepoName')]"
            },
            {
              "name": "githubPersonalAccessToken",
              "value": "[parameters('githubPersonalAccessToken')]"
            },
            {
              "name": "ServiceBus_ConnectionString",
              "value": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('serviceBusNamespaceName'), 'RootManageSharedAccessKey'), '2017-04-01').primaryConnectionString]"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('functionPlanName'))]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/queues",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}', parameters('serviceBusNamespaceName'), 'deprecation-lifecycle-updates')]",
      "properties": {
        "maxDeliveryCount": 5
      }
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}', parameters('serviceBusNamespaceName'), 'deprecation-notice-lifecycle-changes')]",
      "properties": {}
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}/{2}', parameters('serviceBusNamespaceName'), 'deprecation-notice-lifecycle-changes', 'event-grid-notifications')]",
      "properties": {
        "maxDeliveryCount": 3
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('serviceBusNamespaceName'), 'deprecation-notice-lifecycle-changes')]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}/{2}/{3}', parameters('serviceBusNamespaceName'), 'deprecation-notice-lifecycle-changes', 'event-grid-notifications', 'unfiltered')]",
      "properties": {
        "action": {},
        "filterType": "SqlFilter",
        "sqlFilter": {
          "sqlExpression": "1=1",
          "compatibilityLevel": 20
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('serviceBusNamespaceName'), 'deprecation-notice-lifecycle-changes', 'event-grid-notifications')]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}/{2}', parameters('serviceBusNamespaceName'), 'deprecation-notice-lifecycle-changes', 'tweet-deprecation-extended')]",
      "properties": {
        "maxDeliveryCount": 3
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('serviceBusNamespaceName'), 'deprecation-notice-lifecycle-changes')]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}/{2}/{3}', parameters('serviceBusNamespaceName'), 'deprecation-notice-lifecycle-changes', 'tweet-deprecation-extended', 'unfiltered')]",
      "properties": {
        "action": {},
        "filterType": "SqlFilter",
        "sqlFilter": {
          "sqlExpression": "MessageType='AzureDeprecationWasExtendedV1'",
          "compatibilityLevel": 20
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('serviceBusNamespaceName'), 'deprecation-notice-lifecycle-changes', 'tweet-deprecation-extended')]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}/{2}', parameters('serviceBusNamespaceName'), 'deprecation-notice-lifecycle-changes', 'tweet-deprecation-closure')]",
      "properties": {
        "maxDeliveryCount": 3
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('serviceBusNamespaceName'), 'deprecation-notice-lifecycle-changes')]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}/{2}/{3}', parameters('serviceBusNamespaceName'), 'deprecation-notice-lifecycle-changes', 'tweet-deprecation-closure', 'unfiltered')]",
      "properties": {
        "action": {},
        "filterType": "SqlFilter",
        "sqlFilter": {
          "sqlExpression": "MessageType='AzureDeprecationWasClosedV1'",
          "compatibilityLevel": 20
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('serviceBusNamespaceName'), 'deprecation-notice-lifecycle-changes', 'tweet-deprecation-closure')]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}/{2}', parameters('serviceBusNamespaceName'), 'deprecation-notice-lifecycle-changes', 'persist-notice-update')]",
      "properties": {
        "maxDeliveryCount": 3
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces/topics', parameters('serviceBusNamespaceName'), 'deprecation-notice-lifecycle-changes')]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions/rules",
      "apiVersion": "2021-06-01-preview",
      "name": "[format('{0}/{1}/{2}/{3}', parameters('serviceBusNamespaceName'), 'deprecation-notice-lifecycle-changes', 'persist-notice-update', 'unfiltered')]",
      "properties": {
        "action": {},
        "filterType": "SqlFilter",
        "sqlFilter": {
          "sqlExpression": "1=1",
          "compatibilityLevel": 20
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces/topics/subscriptions', parameters('serviceBusNamespaceName'), 'deprecation-notice-lifecycle-changes', 'persist-notice-update')]"
      ]
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('serviceBusConnectionName')]",
      "location": "[parameters('defaultLocation')]",
      "properties": {
        "displayName": "[parameters('serviceBusConnectionName')]",
        "customParameterValues": {},
        "api": {
          "id": "[variables('serviceBusConnectionId')]"
        },
        "parameterValues": {
          "connectionString": "[listKeys(resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('serviceBusNamespaceName'), 'RootManageSharedAccessKey'), '2017-04-01').primaryConnectionString]"
        }
      }
    },
    {
      "type": "Microsoft.Web/connections",
      "apiVersion": "2016-06-01",
      "name": "[parameters('cosmosDbConnectionName')]",
      "location": "[parameters('defaultLocation')]",
      "properties": {
        "displayName": "[parameters('cosmosDbConnectionName')]",
        "customParameterValues": {},
        "api": {
          "id": "[variables('cosmosDbConnectionId')]"
        },
        "parameterValues": {
          "databaseAccount": "[parameters('cosmosDbAccountName')]",
          "accessKey": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2015-04-08').primaryMasterKey]"
        }
      }
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('persistDeprecationWorkflowName')]",
      "location": "[parameters('defaultLocation')]",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "When_a_deprecation_notice_is_published_(peek-lock)": {
              "recurrence": {
                "frequency": "Hour",
                "interval": 1
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['servicebus']['connectionId']"
                  }
                },
                "method": "get",
                "path": "/@{encodeURIComponent(encodeURIComponent('new-deprecation-notices'))}/subscriptions/@{encodeURIComponent('persist-new-notice')}/messages/head/peek",
                "queries": {
                  "sessionId": "None",
                  "subscriptionType": "Main"
                }
              }
            }
          },
          "actions": {
            "Complete_the_message": {
              "runAfter": {
                "Create_or_update_new_deprecation_document": [
                  "Succeeded"
                ]
              },
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['servicebus']['connectionId']"
                  }
                },
                "method": "delete",
                "path": "/@{encodeURIComponent(encodeURIComponent('new-deprecation-notices'))}/subscriptions/@{encodeURIComponent('persist-new-notice')}/messages/complete",
                "queries": {
                  "lockToken": "@triggerBody()?['LockToken']",
                  "sessionId": "",
                  "subscriptionType": "Main"
                }
              }
            },
            "Create_or_update_new_deprecation_document": {
              "runAfter": {},
              "type": "ApiConnection",
              "inputs": {
                "body": "@addProperty(json(decodeBase64(triggerBody()?['ContentData'])), 'id', guid())",
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['documentdb']['connectionId']"
                  }
                },
                "method": "post",
                "path": "/v2/cosmosdb/@{encodeURIComponent('AccountNameFromSettings')}/dbs/@{encodeURIComponent('deprecation-db')}/colls/@{encodeURIComponent('deprecations')}/docs"
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "documentdb": {
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('cosmosDbConnectionName'))]",
                "connectionName": "[parameters('cosmosDbConnectionName')]",
                "id": "[variables('cosmosDbConnectionId')]"
              },
              "servicebus": {
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('serviceBusConnectionName'))]",
                "connectionName": "[parameters('serviceBusConnectionName')]",
                "id": "[variables('serviceBusConnectionId')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('cosmosDbConnectionName'))]",
        "[resourceId('Microsoft.Web/connections', parameters('serviceBusConnectionName'))]"
      ]
    }
  ]
}